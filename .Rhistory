varying = c("iWE_FilesReceived","iWE_DiagnosticsApproved","iWE_InQA","iWE_IssueReported","iWE_InProgress","iWE_ProductionMove"),
v.names = "value",
timevar = "reptype",
times = c("iWE_FilesReceived","iWE_DiagnosticsApproved","iWE_InQA","iWE_IssueReported","iWE_InProgress","iWE_ProductionMove"),
direction = "long")
data <- subset(data, select = -c(id))
grid.newpage()
# two plots
p1 <- ggplot() +
geom_area(data=data,aes(x=factor(Yr_Mnth_LastChange),y=value,fill=factor(reptype),group=factor(reptype), position = 'stack')) +
labs(
x = "Year_Month (YYYY_MM)",
y = "Average Time in Days",
title = "CCC (IP) Data Load - Average Time in Phases") +
#scale_fill_discrete(name="Legend") +
scale_fill_manual(
values=c("#0e1935","#253425","#584a1e","#005cb2","#584a1e","#690b00"),
name="Legend",
breaks=c("iWE_FilesReceived","iWE_DiagnosticsApproved","iWE_InQA","iWE_IssueReported","iWE_InProgress","iWE_ProductionMove"),
labels=c("FilesReceived","DiagnosticsApproved","InQA","IssueReported","InProgress","ProductionMove")
) +
theme(
axis.text.x = element_text(size = 11,angle=45,hjust=1),
axis.text.y = element_text(size = 11),
axis.title = element_text(size = 14),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
plot.title = element_text(size = 16),
legend.position="top") +
guides(fill=guide_legend(nrow=1))
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"),
name="Experimental\nCondition",
breaks=c("ctrl", "trt1", "trt2"),
labels=c("Control", "Treatment 1", "Treatment 2"))
#p1
p2 <- ggplot() +
geom_line(data=IPDL4,aes(x=factor(Yr_Mnth_LastChange),y=count_SFID,group=1)) +
ylab("Count of SF tickets") +
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 14))
# extract gtable
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# overlap the panel of 2nd plot on that of 1st plot
pp<-c(subset(g1$layout, name=="panel", se=t:r))
g<-gtable_add_grob(g1, g2$grobs[[which(g2$layout$name=="panel")]],pp$t,pp$l,pp$b,pp$l)
#plot(g)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
#g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1 ,pp$b)
#grid.draw(g)
# Add second y-axis title
ia <- which(g2$layout$name == "ylab")
ax <- g2$grobs[[ia]]
# str(ax) # you can change features (size, colour etc for these -
# change rotation below
ax$rot <- 270
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
grid.draw(g)
grid.newpage()
SQLreport <- sqlQuery(dbhandle, "select top 10 * from dbo.CCA_Operations_Chennai_Summary WHERE TktsClosed='Y'")
head(SQLreport)
require(RODBC)
require(ggplot2)
require(gtable)
require(grid)
require(plyr)
require(rCharts)
require(slidify)
#Connecting to SQL Server
dbhandle <- odbcDriverConnect('driver={SQL Server};server=.;database=CCAOperations_2014_07;trusted_connection=true')
#Pulling report
SQLreport <- sqlQuery(dbhandle, "select top 100 * from dbo.CCA_Operations_Chennai_Summary WHERE TktsClosed='Y'")
IPDL<-(subset(SQLreport,Module=='CCC(IP)'&RecordType=='CCA Data Load'
, select=c(Yr_LastChange,Mnth_LastChange
,Module,TPM,Proj_BA,DALead,SFID
,iWE_AwaitingFiles,iWE_DiagnosticsCreated,iWE_WithMilliman
,iWE_Services,iWE_Services_BA,iWE_Services_DA,iWE_Services_TE,iWE_Services_Others
,iWE_IssueReported,iWE_IssueReported_BA,iWE_IssueReported_DA,iWE_IssueReported_TE,iWE_IssueReported_Others
,iWE_InProgress,iWE_InProgress_BA,iWE_InProgress_DA,iWE_InProgress_TE,iWE_InProgress_Others
,iWE_FilesReceived,iWE_FilesReceived_BA,iWE_FilesReceived_DA,iWE_FilesReceived_TE,iWE_FilesReceived_Others
,iWE_DiagnosticsApproved,iWE_DiagnosticsApproved_BA,iWE_DiagnosticsApproved_DA,iWE_DiagnosticsApproved_TE,iWE_DiagnosticsApproved_Others
,iWE_InQA,iWE_InQA_BA,iWE_InQA_DA,iWE_InQA_TE,iWE_InQA_Others
,iWE_ProductionMove,iWE_ProductionMove_BA,iWE_ProductionMove_DA,iWE_ProductionMove_TE,iWE_ProductionMove_Others
,iWE_Resolved,iWE_DefectEnchancement,iWE_AwaitingOnDAdvMember,iWE_NotifiedDAdvMember,iWE_Invalid,iWE_OnHold)))
###head(IPDL)
### Summarizing to tickets
#IPDL1<-ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,count_test=length(SFID))
IPDL1<-ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,
count_SFID=length(SFID),
iWE_Services=mean(iWE_Services),
iWE_AwaitingFiles=mean(iWE_AwaitingFiles),
iWE_IssueReported=mean(iWE_IssueReported),
iWE_InProgress=mean(iWE_InProgress),
iWE_FilesReceived=mean(iWE_FilesReceived),
iWE_DiagnosticsApproved=mean(iWE_DiagnosticsApproved),
iWE_InQA=mean(iWE_InQA),
iWE_ProductionMove=mean(iWE_ProductionMove),
iWE_Resolved=mean(iWE_Resolved)
)
###head(IPDL1)
### Appending 0 for months having length GT1
IPDL1$Mnth_LastChange<-sapply(IPDL1$Mnth_LastChange,function(x) {if (all(nchar(x)>1)) x else paste("0",x,sep="")})
### Concatenating Year and Mnth Columns for graphing
IPDL2<-data.frame(Yr_Mnth_LastChange=paste(IPDL1$Yr_LastChange,IPDL1$Mnth_LastChange, sep="_"),IPDL1)
### Final Subset for graphing
IPDL3<-(subset(IPDL2,select=c(Yr_Mnth_LastChange,Module,count_SFID,iWE_Services,iWE_AwaitingFiles,iWE_IssueReported,iWE_InProgress,iWE_FilesReceived,iWE_DiagnosticsApproved,iWE_InQA,iWE_ProductionMove,iWE_Resolved)))
### Filling missed values so geom area does not blank out
### a X axis requires consistent data for plot
### additional step, as geom_area does not handle this gracefully
IPDL4<-merge(IPDL3,expand.grid(Yr_Mnth_LastChange=unique(IPDL3$Yr_Mnth_LastChange)
,Module=unique(IPDL3$Module)
,stringsAsFactors=F),all.y=T)
### putting zero for NA for plotting
IPDL4$count_SFID[is.na(IPDL4$count_SFID)]<-0
IPDL4$iWE_Services[is.na(IPDL4$iWE_Services)]<-0
IPDL4$iWE_AwaitingFiles[is.na(IPDL4$iWE_AwaitingFiles)]<-0
IPDL4$iWE_IssueReported[is.na(IPDL4$iWE_IssueReported)]<-0
IPDL4$iWE_InProgress[is.na(IPDL4$iWE_InProgress)]<-0
IPDL4$iWE_FilesReceived[is.na(IPDL4$iWE_FilesReceived)]<-0
IPDL4$iWE_DiagnosticsApproved[is.na(IPDL4$iWE_DiagnosticsApproved)]<-0
IPDL4$iWE_InQA[is.na(IPDL4$iWE_InQA)]<-0
IPDL4$iWE_ProductionMove[is.na(IPDL4$iWE_ProductionMove)]<-0
IPDL4$iWE_Resolved[is.na(IPDL4$iWE_Resolved)]<-0
#IPDL5<-(subset(IPDL4,select=c(Yr_Mnth_LastChange,Module,iWE_AwaitingFiles,iWE_IssueReported,iWE_InProgress,iWE_FilesReceived,iWE_DiagnosticsApproved,iWE_InQA,iWE_ProductionMove,iWE_Resolved)))
IPDL5<-(subset(IPDL4,select=c(Yr_Mnth_LastChange,Module,iWE_IssueReported,iWE_InProgress,iWE_FilesReceived,iWE_DiagnosticsApproved,iWE_InQA,iWE_ProductionMove)))
###head(IPDL4)
data <- reshape(IPDL5,
varying = c("iWE_FilesReceived","iWE_DiagnosticsApproved","iWE_InQA","iWE_IssueReported","iWE_InProgress","iWE_ProductionMove"),
v.names = "value",
timevar = "reptype",
times = c("iWE_FilesReceived","iWE_DiagnosticsApproved","iWE_InQA","iWE_IssueReported","iWE_InProgress","iWE_ProductionMove"),
direction = "long")
data <- subset(data, select = -c(id))
grid.newpage()
# two plots
p1 <- ggplot() +
geom_area(data=data,aes(x=factor(Yr_Mnth_LastChange),y=value,fill=factor(reptype),group=factor(reptype), position = 'stack')) +
labs(
x = "Year_Month (YYYY_MM)",
y = "Average Time in Days",
title = "CCC (IP) Data Load - Average Time in Phases") +
#scale_fill_discrete(name="Legend") +
scale_fill_manual(
values=c("#0e1935","#253425","#584a1e","#005cb2","#584a1e","#690b00"),
name="Legend",
breaks=c("iWE_FilesReceived","iWE_DiagnosticsApproved","iWE_InQA","iWE_IssueReported","iWE_InProgress","iWE_ProductionMove"),
labels=c("FilesReceived","DiagnosticsApproved","InQA","IssueReported","InProgress","ProductionMove")
) +
theme(
axis.text.x = element_text(size = 11,angle=45,hjust=1),
axis.text.y = element_text(size = 11),
axis.title = element_text(size = 14),
legend.title = element_text(size = 11),
legend.text = element_text(size = 11),
plot.title = element_text(size = 16),
legend.position="top") +
guides(fill=guide_legend(nrow=1))
#p1
p2 <- ggplot() +
geom_line(data=IPDL4,aes(x=factor(Yr_Mnth_LastChange),y=count_SFID,group=1)) +
ylab("Count of SF tickets") +
theme(panel.background = element_rect(fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(size = 14))
# extract gtable
g1 <- ggplotGrob(p1)
g2 <- ggplotGrob(p2)
# overlap the panel of 2nd plot on that of 1st plot
pp<-c(subset(g1$layout, name=="panel", se=t:r))
g<-gtable_add_grob(g1, g2$grobs[[which(g2$layout$name=="panel")]],pp$t,pp$l,pp$b,pp$l)
#plot(g)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
#g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1 ,pp$b)
#grid.draw(g)
# Add second y-axis title
ia <- which(g2$layout$name == "ylab")
ax <- g2$grobs[[ia]]
# str(ax) # you can change features (size, colour etc for these -
# change rotation below
ax$rot <- 270
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
grid.draw(g)
head(IPDL1)
head(IPDL1)
## Graph "Vol": Volume of tickets from 2013 by Module
### Subsetting required fields
Vol<-(subset(SQLreport,select=c(Yr_LastChange,Mnth_LastChange,Module,SFID)))
### Summarizing to tickets
Vol1<-ddply(Vol,.(Yr_LastChange,Mnth_LastChange,Module),summarise,count_test=length(SFID))
### Appending 0 for months having length GT1
Vol1$Mnth_LastChange<-sapply(Vol1$Mnth_LastChange,function(x) {if (all(nchar(x)>1)) x else paste("0",x,sep="")})
### Concatenating Year and Mnth Columns for graphing
Vol2<-data.frame(Yr_Mnth_LastChange=paste(Vol1$Yr_LastChange,Vol1$Mnth_LastChange, sep="_"),Vol1)
### Final Subset for graphing
Vol3<-(subset(Vol2,select=c(Yr_Mnth_LastChange,Module,count_test)))
### Filling missed values so geom area does not blank out
### a X axis requires consistent data for plot
### additional step, as geom_area does not handle this gracefully
Vol4<-merge(Vol3,expand.grid(Yr_Mnth_LastChange=unique(Vol3$Yr_Mnth_LastChange)
,Module=unique(Vol3$Module)
,stringsAsFactors=F),all.y=T)
### putting zero for NA for plotting
Vol4$count_test[is.na(Vol4$count_test)]<-0
## Stacked area plot
Vol_tkts_graph=ggplot(Vol4, aes(factor(Yr_Mnth_LastChange), count_test)) +
geom_area(aes(fill=factor(Module),group=factor(Module)),stat="identity",position = "stack") +
labs(x = "Yr_Mnth",
y = "Count of tickets",
title = "Volume: Count of Salesforce tickets by Module") +
scale_fill_discrete(name = "Module",
breaks = c("CCC(IP)", "CCC(Amb)", "CPRM","CCR","Others"),
labels = c("CCC(IP)", "CCC(Amb)", "CPRM","CCR","Others")) +
theme(axis.text = element_text(size = 12, color = 'black'),
axis.title = element_text(size = 14, face = 'bold'),
legend.title = element_text(size = 14, face = 'bold'),
legend.text = element_text(size = 12),
plot.title = element_text(size = 18, face = 'bold'))
plot(Vol_tkts_graph)
head(IPDL)
SQLreport <- sqlQuery(dbhandle, "select top 100 * from dbo.CCA_Operations_Chennai_Summary WHERE TktsClosed='Y'")
IPDL<-(subset(SQLreport,Module=='CCC(IP)'&RecordType=='CCA Data Load'
, select=c(Yr_LastChange,Mnth_LastChange
,Module,TPM,Proj_BA,DALead,SFID
,iWE_AwaitingFiles,iWE_DiagnosticsCreated,iWE_WithMilliman
,iWE_Services,iWE_Services_BA,iWE_Services_DA,iWE_Services_TE,iWE_Services_Others
,iWE_IssueReported,iWE_IssueReported_BA,iWE_IssueReported_DA,iWE_IssueReported_TE,iWE_IssueReported_Others
,iWE_InProgress,iWE_InProgress_BA,iWE_InProgress_DA,iWE_InProgress_TE,iWE_InProgress_Others
,iWE_FilesReceived,iWE_FilesReceived_BA,iWE_FilesReceived_DA,iWE_FilesReceived_TE,iWE_FilesReceived_Others
,iWE_DiagnosticsApproved,iWE_DiagnosticsApproved_BA,iWE_DiagnosticsApproved_DA,iWE_DiagnosticsApproved_TE,iWE_DiagnosticsApproved_Others
,iWE_InQA,iWE_InQA_BA,iWE_InQA_DA,iWE_InQA_TE,iWE_InQA_Others
,iWE_ProductionMove,iWE_ProductionMove_BA,iWE_ProductionMove_DA,iWE_ProductionMove_TE,iWE_ProductionMove_Others
,iWE_Resolved,iWE_DefectEnchancement,iWE_AwaitingOnDAdvMember,iWE_NotifiedDAdvMember,iWE_Invalid,iWE_OnHold)))
head(IPDL)
IPDL1<-ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,
count_SFID=length(SFID),
iWE_Services=mean(iWE_Services),
iWE_AwaitingFiles=mean(iWE_AwaitingFiles),
iWE_IssueReported=mean(iWE_IssueReported),
iWE_InProgress=mean(iWE_InProgress),
iWE_FilesReceived=mean(iWE_FilesReceived),
iWE_DiagnosticsApproved=mean(iWE_DiagnosticsApproved),
iWE_InQA=mean(iWE_InQA),
iWE_ProductionMove=mean(iWE_ProductionMove),
iWE_Resolved=mean(iWE_Resolved)
)
head(IPDL1)
require(plyr)
IPDL1<-ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,
count_SFID=length(SFID),
iWE_Services=mean(iWE_Services),
iWE_AwaitingFiles=mean(iWE_AwaitingFiles),
iWE_IssueReported=mean(iWE_IssueReported),
iWE_InProgress=mean(iWE_InProgress),
iWE_FilesReceived=mean(iWE_FilesReceived),
iWE_DiagnosticsApproved=mean(iWE_DiagnosticsApproved),
iWE_InQA=mean(iWE_InQA),
iWE_ProductionMove=mean(iWE_ProductionMove),
iWE_Resolved=mean(iWE_Resolved)
)
head(IPDL1)
IPDL1<-ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,count_test=length(SFID))
head(IPDL1)
ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,
count_SFID=length(SFID),
iWE_Services=mean(iWE_Services),
iWE_AwaitingFiles=mean(iWE_AwaitingFiles),
iWE_IssueReported=mean(iWE_IssueReported),
iWE_InProgress=mean(iWE_InProgress),
iWE_FilesReceived=mean(iWE_FilesReceived),
iWE_DiagnosticsApproved=mean(iWE_DiagnosticsApproved),
iWE_InQA=mean(iWE_InQA),
iWE_ProductionMove=mean(iWE_ProductionMove),
iWE_Resolved=mean(iWE_Resolved)
)
#Connecting to SQL Server
dbhandle <- odbcDriverConnect('driver={SQL Server};server=.;database=CCAOperations_2014_07;trusted_connection=true')
#Pulling report
SQLreport <- sqlQuery(dbhandle, "select * from dbo.CCA_Operations_Chennai_Summary WHERE TktsClosed='Y'")
require(RODBC)
require(ggplot2)
require(gtable)
require(grid)
require(plyr)
require(rCharts)
require(slidify)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=.;database=CCAOperations_2014_07;trusted_connection=true')
#Pulling report
SQLreport <- sqlQuery(dbhandle, "select * from dbo.CCA_Operations_Chennai_Summary WHERE TktsClosed='Y'")
(subset(SQLreport,select=c(Yr_LastChange,Mnth_LastChange,Module,SFID)))
SQLreport <- sqlQuery(dbhandle, "select * from dbo.CCA_Operations_Chennai_Summary WHERE TktsClosed='Y'")
nrow(SQLreport)
Vol<-(subset(SQLreport,select=c(Yr_LastChange,Mnth_LastChange,Module,SFID)))
Vol1<-ddply(Vol,.(Yr_LastChange,Mnth_LastChange,Module),summarise,count_test=length(SFID))
Vol1
Vol1
IPDL<-(subset(SQLreport,Module=='CCC(IP)'&RecordType=='CCA Data Load'
, select=c(Yr_LastChange,Mnth_LastChange
,Module,TPM,Proj_BA,DALead,SFID
,iWE_AwaitingFiles,iWE_DiagnosticsCreated,iWE_WithMilliman
,iWE_Services,iWE_Services_BA,iWE_Services_DA,iWE_Services_TE,iWE_Services_Others
,iWE_IssueReported,iWE_IssueReported_BA,iWE_IssueReported_DA,iWE_IssueReported_TE,iWE_IssueReported_Others
,iWE_InProgress,iWE_InProgress_BA,iWE_InProgress_DA,iWE_InProgress_TE,iWE_InProgress_Others
,iWE_FilesReceived,iWE_FilesReceived_BA,iWE_FilesReceived_DA,iWE_FilesReceived_TE,iWE_FilesReceived_Others
,iWE_DiagnosticsApproved,iWE_DiagnosticsApproved_BA,iWE_DiagnosticsApproved_DA,iWE_DiagnosticsApproved_TE,iWE_DiagnosticsApproved_Others
,iWE_InQA,iWE_InQA_BA,iWE_InQA_DA,iWE_InQA_TE,iWE_InQA_Others
,iWE_ProductionMove,iWE_ProductionMove_BA,iWE_ProductionMove_DA,iWE_ProductionMove_TE,iWE_ProductionMove_Others
,iWE_Resolved,iWE_DefectEnchancement,iWE_AwaitingOnDAdvMember,iWE_NotifiedDAdvMember,iWE_Invalid,iWE_OnHold)))
IPDL1<-ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,count_test=length(SFID))
IPDL1
ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,count_test=length(SFID))
IPDL<-(subset(SQLreport,Module=='CCC(IP)'&RecordType=='CCA Data Load'
, select=c(Yr_LastChange,Mnth_LastChange
,Module,TPM,Proj_BA,DALead,SFID
,iWE_AwaitingFiles,iWE_DiagnosticsCreated,iWE_WithMilliman
,iWE_Services,iWE_Services_BA,iWE_Services_DA,iWE_Services_TE,iWE_Services_Others
,iWE_IssueReported,iWE_IssueReported_BA,iWE_IssueReported_DA,iWE_IssueReported_TE,iWE_IssueReported_Others
,iWE_InProgress,iWE_InProgress_BA,iWE_InProgress_DA,iWE_InProgress_TE,iWE_InProgress_Others
,iWE_FilesReceived,iWE_FilesReceived_BA,iWE_FilesReceived_DA,iWE_FilesReceived_TE,iWE_FilesReceived_Others
,iWE_DiagnosticsApproved,iWE_DiagnosticsApproved_BA,iWE_DiagnosticsApproved_DA,iWE_DiagnosticsApproved_TE,iWE_DiagnosticsApproved_Others
,iWE_InQA,iWE_InQA_BA,iWE_InQA_DA,iWE_InQA_TE,iWE_InQA_Others
,iWE_ProductionMove,iWE_ProductionMove_BA,iWE_ProductionMove_DA,iWE_ProductionMove_TE,iWE_ProductionMove_Others
,iWE_Resolved,iWE_DefectEnchancement,iWE_AwaitingOnDAdvMember,iWE_NotifiedDAdvMember,iWE_Invalid,iWE_OnHold)))
head(IPDL)
(subset(SQLreport,Module=='CCC(IP)'&RecordType=='CCA Data Load'
, select=c(Yr_LastChange,Mnth_LastChange
,Module,TPM,Proj_BA,DALead,SFID
,iWE_AwaitingFiles,iWE_DiagnosticsCreated,iWE_WithMilliman
,iWE_Services,iWE_Services_BA,iWE_Services_DA,iWE_Services_TE,iWE_Services_Others
,iWE_IssueReported,iWE_IssueReported_BA,iWE_IssueReported_DA,iWE_IssueReported_TE,iWE_IssueReported_Others
,iWE_InProgress,iWE_InProgress_BA,iWE_InProgress_DA,iWE_InProgress_TE,iWE_InProgress_Others
,iWE_FilesReceived,iWE_FilesReceived_BA,iWE_FilesReceived_DA,iWE_FilesReceived_TE,iWE_FilesReceived_Others
,iWE_DiagnosticsApproved,iWE_DiagnosticsApproved_BA,iWE_DiagnosticsApproved_DA,iWE_DiagnosticsApproved_TE,iWE_DiagnosticsApproved_Others
,iWE_InQA,iWE_InQA_BA,iWE_InQA_DA,iWE_InQA_TE,iWE_InQA_Others
,iWE_ProductionMove,iWE_ProductionMove_BA,iWE_ProductionMove_DA,iWE_ProductionMove_TE,iWE_ProductionMove_Others
,iWE_Resolved,iWE_DefectEnchancement,iWE_AwaitingOnDAdvMember,iWE_NotifiedDAdvMember,iWE_Invalid,iWE_OnHold)))
head(SQLreport)
ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,count_test=length(SFID))
(subset(SQLreport,select=c(Yr_LastChange,Mnth_LastChange,Module,SFID)))
IPDL<-(subset(SQLreport,Module=='CCC(IP)'&RecordType=='CCA Data Load'
, select=c(Yr_LastChange,Mnth_LastChange,Module,SFID)))
IPDL
(subset(SQLreport,Module=='CCC(IP)' & RecordType=='CCA Data Load'
, select=c(Yr_LastChange,Mnth_LastChange,Module,SFID)))
(subset(SQLreport
,select=c(Yr_LastChange,Mnth_LastChange,Module,SFID)))
(subset(SQLreport, Module=='CCC(IP)'
,select=c(Yr_LastChange,Mnth_LastChange,Module,SFID)))
IPDL<-(subset(SQLreport, ModuleAlias=='CCC(IP)' & RecordTypeAlias=='CCA Data Load'
,select=c(Yr_LastChange,Mnth_LastChange
,Module,TPM,Proj_BA,DALead,SFID
,iWE_AwaitingFiles,iWE_DiagnosticsCreated,iWE_WithMilliman
,iWE_Services,iWE_Services_BA,iWE_Services_DA,iWE_Services_TE,iWE_Services_Others
,iWE_IssueReported,iWE_IssueReported_BA,iWE_IssueReported_DA
,iWE_IssueReported_TE,iWE_IssueReported_Others
,iWE_InProgress,iWE_InProgress_BA,iWE_InProgress_DA,iWE_InProgress_TE,iWE_InProgress_Others
,iWE_FilesReceived,iWE_FilesReceived_BA,iWE_FilesReceived_DA
,iWE_FilesReceived_TE,iWE_FilesReceived_Others
,iWE_DiagnosticsApproved,iWE_DiagnosticsApproved_BA,iWE_DiagnosticsApproved_DA
,iWE_DiagnosticsApproved_TE,iWE_DiagnosticsApproved_Others
,iWE_InQA,iWE_InQA_BA,iWE_InQA_DA,iWE_InQA_TE,iWE_InQA_Others
,iWE_ProductionMove,iWE_ProductionMove_BA,iWE_ProductionMove_DA
,iWE_ProductionMove_TE,iWE_ProductionMove_Others
,iWE_Resolved,iWE_DefectEnchancement,iWE_AwaitingOnDAdvMember
,iWE_NotifiedDAdvMember,iWE_Invalid,iWE_OnHold)))
head(IPDL)
ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,
count_SFID=length(SFID),
iWE_Services=mean(iWE_Services),
iWE_AwaitingFiles=mean(iWE_AwaitingFiles),
iWE_IssueReported=mean(iWE_IssueReported),
iWE_InProgress=mean(iWE_InProgress),
iWE_FilesReceived=mean(iWE_FilesReceived),
iWE_DiagnosticsApproved=mean(iWE_DiagnosticsApproved),
iWE_InQA=mean(iWE_InQA),
iWE_ProductionMove=mean(iWE_ProductionMove),
iWE_Resolved=mean(iWE_Resolved)
)
ddply(IPDL,.(Yr_LastChange,Mnth_LastChange,Module),summarise,
count_SFID=length(SFID),
iWE_Services=mean(iWE_Services),
iWE_AwaitingFiles=mean(iWE_AwaitingFiles),
iWE_IssueReported=mean(iWE_IssueReported),
iWE_InProgress=mean(iWE_InProgress),
iWE_FilesReceived=mean(iWE_FilesReceived),
iWE_DiagnosticsApproved=mean(iWE_DiagnosticsApproved),
iWE_InQA=mean(iWE_InQA),
iWE_ProductionMove=mean(iWE_ProductionMove),
iWE_Resolved=mean(iWE_Resolved)
)
getwd()
setwd("C:\\Mac Move\\eBooks\Coursera\\Specialization\\Data Science\\05 Reproducible Research\\repdata-data-activity")
setwd("C:\\Mac Move\\eBooks\Coursera\\Specialization\\Data Science\\05 Reproducible Research\\repdata-data-activity")
setwd("C:\\Mac Move\\eBooks\\Coursera\\Specialization\\Data Science\\04 Exploratory Data Analysis\\Week 1\\exdata-data-household_power_consumption")
setwd("C:\\Mac Move\\eBooks\\Coursera\\Specialization\\Data Science\\05 Reproducible Research\\repdata-data-activity")
activity=read.csv("activity.csv")
head(activity)
activity
str(activity)
dim(activity)
library(sqldf)
sqldf("Select top 10 * from activity")
sqldf("Select * from activity limit 10")
sqldf("Select date,sum(steps) from activity group by date")
stepsperday=sqldf("Select date,sum(steps) as stepsperday from activity group by date")
stepsperday(stepsperday)
stepsperday
stepsperday$stepsperday
mean(stepsperday$stepsperday)
activity=read.csv("activity.csv",na.strings = c("?"))
str(activity)
stepsperday=sqldf("Select date,sum(steps) as stepsperday from activity group by date")
mean(stepsperday$stepsperday)
Select date,sum(steps) as stepsperday from activity group by date
sqldf("Select date,sum(steps) as stepsperday from activity group by date")
mean(stepsperday$stepsperday,na.rm=TRUE)
str(activity)
activity=read.csv("activity.csv")
str(activity)
mean(stepsperday$stepsperday,na.rm=TRUE)
stepsperday=sqldf("Select date,sum(steps) as stepsperday from activity group by date")
mean(stepsperday$stepsperday,na.rm=TRUE)
str(activity)
stepsperday
sqldf("Select date,sum(steps) as stepsperday from activity group by date")
stepsperday$stepsperday
mean(stepsperday$stepsperday,na.rm=TRUE)
summaryBy(date~steps,data=activity,FUN=function(x))
summaryBy(date~steps,data=activity,FUN=function(x) c(mean=mean(x),median=median(x)))
library(summaryBy)
library(plyr)
ddply(activity,'date',function(x) c(count=nrow(x),mean=mean(x$steps)))
ddply(activity,'date',function(x) c(count=nrow(x),sum=sum(x),mean=mean(x$steps)))
ddply(activity,'date',function(x) c(count=nrow(x),sum=sum(x$steps),mean=mean(x$steps)))
data=ddply(activity,'date',function(x) c(count=nrow(x),sum=sum(x$steps),mean=mean(x$steps)))
mean(data$sum)
mean(data$sum, na.rm=TRUE)
data=ddply(activity,'date',function(x) c(sum=sum(x$steps),mean=mean(x$steps)))
mean(data$sum, na.rm=TRUE)
mean(data$mean, na.rm=TRUE)
data=ddply(activity,'date',function(x) c(sum=sum(x$steps)))
data
data=ddply(activity,'date',function(x) c(TotalSteps=sum(x$steps)))
data
mean(data, na.rm=TRUE)
mean(data$TotalSteps, na.rm=TRUE)
hist(data)
hist(data$TotalSteps)
hist(data$TotalSteps, na.rm=TRUE)
hist(data$TotalSteps)
hist(data$TotalSteps)
plot(activity$interval,activity$steps)
plot(activity$interval,activity$steps,type="l")
data2=ddply(activity,'interval',function(x) c(TotalSteps=sum(x$steps)))
data2=ddply(activity,'interval',function(x) c(TotalSteps=mean(x$steps)))
data2
data2=ddply(activity,'interval',function(x) c(TotalSteps=mean(x$steps,na.rm=TRUE)))
data2
plot(data2$interval,data2$steps,type="l")
data2
plot(data2$interval,data2$AvgSteps,type="l")
data2=ddply(activity,'interval',function(x) c(AvgSteps=mean(x$steps,na.rm=TRUE)))
plot(data2$interval,data2$AvgSteps,type="l")
max(data2$AvgSteps)
data2[which.max(data2$AvgSteps),]
data2$interval[which.max(data2$AvgSteps),]
data2[which.max(data2$AvgSteps),][interval]
data2[which.max(data2$AvgSteps),][1]
data2[which.max(data2$AvgSteps),][data$interval]
data2[which.max(data2$AvgSteps),][data2$interval]
data2[which.max(data2$AvgSteps),1]
data2[which.max(data2$AvgSteps),data2$interval]
interval=data2[which.max(data2$AvgSteps),]
interval$interval
interval$interval
getwd()
setwd("C:\\Mac Move\\eBooks\\Coursera\\Specialization\\Data Science\\05 Reproducible Research\\repdata-data-activity")
library(plyr)
library(sqldf)
activity=read.csv("activity.csv")
head(activity)
dim(activity)
str(activity)
data1=ddply(activity,'date',function(x) c(TotalSteps=sum(x$steps)))
mean(data1$TotalSteps, na.rm=TRUE)
hist(data1$TotalSteps)
data2=ddply(activity,'interval',function(x) c(AvgSteps=mean(x$steps,na.rm=TRUE)))
plot(data2$interval,data2$AvgSteps,type="l")
interval=data2[which.max(data2$AvgSteps),]
interval$interval
